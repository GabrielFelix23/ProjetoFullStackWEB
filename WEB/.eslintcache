[{"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\routes\\index.js":"1","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\QRCode\\styles.js":"2","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\Header\\index.js":"3","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\QRCode\\index.js":"4","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Task\\styles.js":"5","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Home\\index.js":"6","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Task\\index.js":"7","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\FilterCard\\index.js":"8","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\services\\api.js":"9","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\utils\\typeIcons.js":"10","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\TaskCard\\index.js":"11","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\TaskCard\\styles.js":"12","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\utils\\isConnected.js":"13","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\Header\\styles.js":"14"},{"size":605,"mtime":1611018295903,"results":"15","hashOfConfig":"16"},{"size":1135,"mtime":1611097640051,"results":"17","hashOfConfig":"16"},{"size":1866,"mtime":1611774505057,"results":"18","hashOfConfig":"16"},{"size":1454,"mtime":1611773998028,"results":"19","hashOfConfig":"16"},{"size":2293,"mtime":1610306374672,"results":"20","hashOfConfig":"16"},{"size":2437,"mtime":1611774094596,"results":"21","hashOfConfig":"16"},{"size":4711,"mtime":1611774244015,"results":"22","hashOfConfig":"16"},{"size":347,"mtime":1609454994691,"results":"23","hashOfConfig":"16"},{"size":119,"mtime":1609859815764,"results":"24","hashOfConfig":"16"},{"size":642,"mtime":1609976937231,"results":"25","hashOfConfig":"16"},{"size":740,"mtime":1611013550064,"results":"26","hashOfConfig":"16"},{"size":942,"mtime":1611771169309,"results":"27","hashOfConfig":"16"},{"size":90,"mtime":1611771917794,"results":"28","hashOfConfig":"16"},{"size":1414,"mtime":1611772975456,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"133c0he",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\routes\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\QRCode\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\Header\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\QRCode\\index.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Task\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Home\\index.js",["60","61","62","63","64","65","66"],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\views\\Task\\index.js",["67","68","69","70","71","72"],"import React, {useState, useEffect}  from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport * as S from './styles'\r\n\r\nimport {format} from 'date-fns'\r\n\r\nimport api from '../../services/api'\r\nimport isConnected from '../../utils/isConnected'\r\n\r\n//Nossos components\r\nimport Header from '../../components/Header'\r\nimport Footer from '../../components/Footer'\r\nimport TypeIcons from '../../utils/typeIcons'\r\n\r\nimport iconCalender from '../../assets/calendar.png'\r\nimport iconClock from '../../assets/clock.png'\r\n\r\nfunction Task({match}) {\r\n  const [redirect, setRedirect] = useState(false)\r\n  const [type, setType] = useState()\r\n  const [id, setid] = useState()\r\n  const [done, setDone] = useState(false)\r\n  const [title, setTitle] = useState()\r\n  const [description, setDescription] = useState()\r\n  const [date, setDate] = useState()\r\n  const [hour, setHour] = useState()\r\n\r\n  async function LoadTaskDetails(){\r\n    await api.get(`/task/${match.params.id}`)\r\n    .then((response) => {\r\n      setType(response.data.type)\r\n      setDone(response.data.done)\r\n      setTitle(response.data.title)\r\n      setDescription(response.data.description)\r\n      setDate(format(new Date(response.data.when), 'yyyy-mm-dd'))\r\n      setHour(format(new Date(response.data.when), 'HH:mm'))\r\n    })\r\n  }\r\n\r\n  async function Save(){\r\n    //Validação dos dados\r\n    if(!title){\r\n      return alert(\"Você precisa informar o título da tarefa\")\r\n    } \r\n    else if(!description){\r\n      return alert(\"Você precisa informar a descrição da tarefa\")\r\n    }\r\n    else if(!type){\r\n      return alert(\"Você precisa informar o tipo da tarefa\")\r\n    }\r\n    else if(!date){\r\n      return alert(\"Você precisa informar a data da tarefa\")\r\n    }\r\n    else if(!hour){\r\n      return alert(\"Você precisa informar a hora da tarefa\")\r\n    }\r\n\r\n    if(match.params.id){\r\n      await api.put(`/task/${match.params.id}`, {\r\n        macaddress: isConnected,\r\n        done,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      }).then(() => {\r\n        setRedirect(true)\r\n      })\r\n    }else{\r\n      await api.post('/task', {\r\n        macaddress: isConnected,\r\n        type,\r\n        title,\r\n        description,\r\n        when: `${date}T${hour}:00.000`\r\n      }).then(() => {\r\n        setRedirect(true)        \r\n      })\r\n    }\r\n  }\r\n\r\n  async function Remove(){\r\n    const res = window.confirm('Deseja realmente remover a tarefa?')\r\n    if(res == true){\r\n      await api.delete(`/task/${match.params.id}`)\r\n      .then(() => {\r\n        setRedirect(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isConnected){\r\n      setRedirect(true)\r\n    }\r\n\r\n    LoadTaskDetails()\r\n  }, [])\r\n\r\n  return (\r\n    <S.Container>\r\n      { redirect && <Redirect to=\"/\"/>}\r\n\r\n      <Header/>\r\n      <S.Form>\r\n        <S.typeIcons>\r\n            {\r\n                TypeIcons.map((icon, index) => (\r\n                    index > 0 && \r\n                    <button type=\"button\" onClick={() => setType(index)}>\r\n                        <img src={icon} alt=\"Tipo da tarefa\"\r\n                        className={type && type != index && 'inative'}/>\r\n                    </button> \r\n                ))\r\n            }\r\n        </S.typeIcons>\r\n\r\n        <S.Input>\r\n            <span>Título</span>\r\n            <input type=\"text\" placeholder=\"Título da tarefa...\" \r\n            onChange={e => setTitle(e.target.value)} value={title}/>\r\n        </S.Input>\r\n\r\n        <S.TextArea>\r\n            <span>Descrição</span>\r\n            <textarea rows={5} placeholder=\"Detalhes da tarefa...\" \r\n            onChange={e => setDescription(e.target.value)} value={description}/>\r\n        </S.TextArea>\r\n\r\n        <S.Input>\r\n            <span>Data</span>\r\n            <input type=\"date\" placeholder=\"Título da tarefa...\"\r\n            onChange={e => setDate(e.target.value)} value={date}/>\r\n            <img src={iconCalender} alt=\"Calendário\"/>\r\n        </S.Input>\r\n\r\n        <S.Input>\r\n            <span>Hora</span>\r\n            <input type=\"time\" placeholder=\"Título da tarefa...\"\r\n            onChange={e => setHour(e.target.value)} value={hour}/>\r\n            <img src={iconClock} alt=\"Relógio\"/>\r\n        </S.Input>\r\n\r\n        <S.Options>\r\n            <div>\r\n                <input type=\"checkbox\" checked={done} onChange={() => setDone(!done)}/>\r\n                <span>CONCLUÍDO</span>\r\n            </div>\r\n            { match.params.id && <button type=\"button\" onClick={Remove}>EXCLUIR</button>}\r\n        </S.Options>\r\n\r\n        <S.Save>\r\n            <button type=\"button\" onClick={Save}>SALVAR</button>\r\n        </S.Save>\r\n      </S.Form>\r\n\r\n      <Footer/>\r\n    </S.Container>\r\n  )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\FilterCard\\index.js",[],["73","74"],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\services\\api.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\utils\\typeIcons.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\TaskCard\\index.js",["75","76"],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\utils\\isConnected.js",[],"C:\\Users\\felix\\Documents\\GitHub\\ProjetoFullStackWEB\\web\\src\\components\\Header\\styles.js",[],{"ruleId":"77","severity":1,"message":"78","line":36,"column":6,"nodeType":"79","endLine":36,"endColumn":22,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":45,"column":62,"nodeType":"83","messageId":"84","endLine":45,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":48,"column":62,"nodeType":"83","messageId":"84","endLine":48,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":51,"column":62,"nodeType":"83","messageId":"84","endLine":51,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":54,"column":62,"nodeType":"83","messageId":"84","endLine":54,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":57,"column":62,"nodeType":"83","messageId":"84","endLine":57,"endColumn":64},{"ruleId":"81","severity":1,"message":"82","line":62,"column":29,"nodeType":"83","messageId":"84","endLine":62,"endColumn":31},{"ruleId":"85","severity":1,"message":"86","line":21,"column":10,"nodeType":"87","messageId":"88","endLine":21,"endColumn":12},{"ruleId":"85","severity":1,"message":"89","line":21,"column":14,"nodeType":"87","messageId":"88","endLine":21,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":84,"column":12,"nodeType":"83","messageId":"84","endLine":84,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":98,"column":6,"nodeType":"79","endLine":98,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":106,"column":9,"nodeType":"94","endLine":106,"endColumn":22},{"ruleId":"81","severity":1,"message":"95","line":112,"column":49,"nodeType":"83","messageId":"84","endLine":112,"endColumn":51},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"77","severity":1,"message":"100","line":8,"column":18,"nodeType":"87","endLine":8,"endColumn":25},{"ruleId":"77","severity":1,"message":"100","line":9,"column":18,"nodeType":"87","endLine":9,"endColumn":25},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'setid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'LoadTaskDetails'. Either include it or remove the dependency array.",["102"],"react/jsx-pascal-case","Imported JSX component typeIcons must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [filterAcitived, loadTasks]",{"range":"109","text":"110"},"Update the dependencies array to be: [LoadTaskDetails]",{"range":"111","text":"112"},[958,974],"[filterAcitived, loadTasks]",[2693,2695],"[LoadTaskDetails]"]